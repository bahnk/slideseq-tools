/*
 * nourdinebah@gmail.com
 */

#include <string>
#include <fstream>

#include "record.hpp"

// ============================================================================
// Constructors
// ============================================================================

// ----------------------------------------------------------------------------
// Default constructor
// ----------------------------------------------------------------------------

Record::Record()
{
}

// ----------------------------------------------------------------------------
// Minimal constructor
// ----------------------------------------------------------------------------

Record::Record(unsigned long long index, char* read, int32_t reference,
	int32_t position, long score, char* gene)
{
	this->index = index;
	this->read = std::string(read);
	this->reference = reference;
	this->position = position;
	this->score = score;
	this->gene = std::string(gene);
}

// ============================================================================
// Getters
// ============================================================================

// ----------------------------------------------------------------------------
// GetIndex()
// ----------------------------------------------------------------------------

unsigned long long Record::GetIndex() const
{
	return index;
}

// ----------------------------------------------------------------------------
// GetRead()
// ----------------------------------------------------------------------------

std::string Record::GetRead() const
{
	return read;
}

// ----------------------------------------------------------------------------
// GetReference()
// ----------------------------------------------------------------------------

int32_t Record::GetReference() const
{
	return reference;
}

// ----------------------------------------------------------------------------
// GetPos()
// ----------------------------------------------------------------------------

int32_t Record::GetPos() const
{
	return position;
}

// ----------------------------------------------------------------------------
// GetScore()
// ----------------------------------------------------------------------------

long Record::GetScore() const
{
	return score;
}

// ----------------------------------------------------------------------------
// GetGene()
// ----------------------------------------------------------------------------

std::string Record::GetGene() const
{
	return gene;
}

// ============================================================================
// Methods
// ============================================================================

// ----------------------------------------------------------------------------
// GetCSVString()
// ----------------------------------------------------------------------------

std::string Record::GetCSVString(char delimiter) const
{
	std::string delim(1, delimiter);
	return GetRead() + delim + GetGene() + delim + std::to_string(GetScore());
}

// ============================================================================
// Operators
// ============================================================================

// ----------------------------------------------------------------------------
// ostream
// ----------------------------------------------------------------------------

std::ostream& operator<<(std::ostream& out, const Record& record)
{
	out
		<< "("
		<< record.GetIndex() << ", "
		<< record.GetRead() << ", "
		<< record.GetReference() << ", "
		<< record.GetPos() << ", "
		<< record.GetScore() << ", "
		<< record.GetGene()
		<< ")";
	return out;
}

// ----------------------------------------------------------------------------
// lesser than
// ----------------------------------------------------------------------------

bool operator<(const Record& record1, const Record& record2)
{
	return record1.GetIndex() < record2.GetIndex();
}

